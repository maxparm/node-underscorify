// Generated by CoffeeScript 1.6.3
var defaultOptions, minify, path, through, transform, _;

through = require('through');

_ = require("underscore");

minify = require("html-minifier").minify;

path = require('path');

defaultOptions = {
  extensions: ['tpl', 'html'],
  templateSettings: {},
  htmlMinifier: false,
  requires: []
};

transform = function(options) {
  options = _.defaults(optionsÂ  || {}, defaultOptions);
  return function( file, option_overrides ) {
    var buffer, isTemplate;
	  option_overrides = option_overrides || {};
	  _.defaults( option_overrides, options );
    isTemplate = _.some( option_overrides.extensions, function(ext) {
      return path.extname(file) === '.' + ext;
    });
    if (!isTemplate) {
      return through();
    }
    buffer = "";
    return through(function(chunk) {
      return buffer += chunk.toString();
    }, function() {
      var compiled, html, jst;
      compiled = "";
      if (option_overrides.requires.length) {
        compiled = _.reduce(option_overrides.requires, function(s, r) {
          if (r.variable && r.module) {
            s += 'var ' + r.variable + ' = require("' + r.module + '");' + "\n";
          }
          return s;
        }, '');
      }
      html = buffer.toString();
      if (option_overrides.htmlMinifier) {
        html = minify(html, option_overrides.htmlMinifier);
      }
      jst = _.template(html, void 0, option_overrides.templateSettings).source;
      compiled += "module.exports = " + jst + ";\n";
      this.queue(compiled);
      return this.queue(null);
    });
  };
};

module.exports = transform();

module.exports.transform = transform;
